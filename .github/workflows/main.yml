name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node
    
    - name: Install NestJS dependencies
      run: cd test-and-quality-bowling-score && npm install

  build_gatling:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    - name: Build Gatling Project with Maven
      run: |
        cd api-performance-test
        mvn -B clean install -e -X -DskipTests=true

  tests:
    runs-on: ubuntu-latest
    needs: [build, build_gatling]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set permissions for Jest
      run: chmod +x test-and-quality-bowling-score/node_modules/.bin/jest

    - name: Run NestJS Unit Tests
      run: cd test-and-quality-bowling-score && npm test

    - name: Run Gatling Load Tests
      run: cd api-performance-test && mvn gatling:test '-DclassName=tests.SmokeTest'
      
    - name: Check for test failures
      run: |
        FAILURES=$(grep -oP '(?<=KO\s|).*?(?=\s)' api-performance-test/target/gatling/**/simulation.log | wc -l)
        echo "Number of failed tests: $FAILURES"
        if [ "$FAILURES" -gt 20 ]; then
          echo "More than 20 test failures. Failing the job."
          exit 1
        fi
